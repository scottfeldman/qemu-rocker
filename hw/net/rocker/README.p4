P4 support for rocker device:
--------------------------------

P4 program is used define a new prcessing pipeline. This program 
defines the packet processing behavior of the rocker-p4 device. The 
program also defines its own tables, actions and packet processing flow.

A rocker device supports multiple "worlds", where each world has its own 
packet processing behavior (pipeline). Rocker front-panel ports are assigned 
to a world by the rocker driver at init time. Multiple worlds can co-exits.

Currently OF-DPA world and P4 L2L3 worlds are implemented. Support for
multiple P4 worlds will be added in future.

The p4_l2l3.p4 program is the simplest program to demonstrate how to add 
P4 functionality to rocker. In future, this program will be enhanced to 
add more features (such as L3 routing, vxlan, mpls...)

The functionality of P4 pipeline is implemented using a P4 behavioral model.
P4 behavior model code is generated by P4 compiler-tools to mimic the 
user-defined packet processing behavior as defined in a P4 program. 
Additional files needed to interface with the behavioral model are also 
generated by the P4 compiler-tools.

Currently P4 code is compiled in a separate P4Lang public repository and 
required generated files are copied to rocker directory. The behavior-model
libraries are kept in p4lib/ and are linked with QEMU executable.

The following files are generated by P4 compiler tool-chain. 
These files are committed to QEMU repo until we make P4 compiler tools 
available in this repo.

    rocker_p4_l2l3_enums.h
    rocker_p4_l2l3_lf.h
    rocker_p4_l2l3_tables.h
    rocker_p4_l2l3_tables_if.h
    rocker_p4_rmt.h
    rocker_p4_features.h

    p4lib/p4_l2l3_bm.a
    p4lib/p4utils.a


P4 behavioral model uses libJudy. Please install ligjudy-dev package.

